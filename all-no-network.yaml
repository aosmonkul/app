apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: back
  name: back
spec:
  selector:
    matchLabels:
      io.kompose.service: back
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: back
    spec:
      containers:
      - image: aosmon17/quotes-back:v1
        env: 
          name: SQLALCHEMY_DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: backsecret
              key: DATABASE_URI
        name: api
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: back
  name: back
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: back
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: data
  name: data
spec:
  selector:
    matchLabels:
      io.kompose.service: data
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: data
    spec:
      containers:
      - env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          valueFrom: 
            secretKeyRef:
              name: datasecret
              key: DATABASE
        - name: MYSQL_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: datasecret
              key: PASSWORD
        - name: MYSQL_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: datasecret
              key: ROOT_PASSWORD
        image: aosmon17/quotes-data:v1
        name: db
        ports:
        - containerPort: 3306
        resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: data-script
  name: data-script
spec:
  selector:
    matchLabels:
      io.kompose.service: data-script
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: data-script
    spec:
      containers:
      - image: aosmon17/quotes-script:v1
        name: data-script
        env:
        - name: MYSQL_DB_HOST
          valueFrom:
            secretKeyRef:
              name: scriptsecret
              key: host
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: scriptsecret
              key: user    
        - name: MYSQL_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: scriptsecret
              key: password                        
        resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: data
  name: data
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: data
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: front
  name: front
spec:
  selector:
    matchLabels:
      io.kompose.service: front
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: front
    spec:
      containers:
      - image: aosmon17/quotes-front:v1
        name: front
        ports:
        - containerPort: 3001
        resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: front
  name: front
spec:
  ports:
  - name: "3001"
    port: 3001
    targetPort: 3001
  selector:
    io.kompose.service: front
status:
  loadBalancer: {}

---




